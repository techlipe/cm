[Thu Apr 02 2020 18:57:10 GMT-0300 (GMT-03:00)] DEBUG Listening on port 3000
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG connect start
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG connect start
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG connect database return mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb MongoClient {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s:
   { url:
      'mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb',
     options:
      { servers: [Array],
        compressors: 'disabled',
        gssapiservicename: 'mongodb',
        useNewUrlParser: true,
        connectTimeoutMS: 2000,
        db: 'cm',
        dbName: 'cm',
        socketTimeoutMS: 360000,
        promiseLibrary: [Function: Promise] },
     promiseLibrary: [Function: Promise],
     dbCache: {},
     sessions: [] },
  topology:
   Server {
     _events:
      { serverOpening: [Function],
        serverDescriptionChanged: [Function],
        serverHeartbeatStarted: [Function],
        serverHeartbeatSucceeded: [Function],
        serverHeartbeatFailed: [Function],
        serverClosed: [Function],
        topologyOpening: [Function],
        topologyClosed: [Function],
        topologyDescriptionChanged: [Function],
        commandStarted: [Function],
        commandSucceeded: [Function],
        commandFailed: [Function],
        joined: [Function],
        left: [Function],
        ping: [Function],
        ha: [Function],
        authenticated: [Function],
        error: [Function],
        timeout: [Function],
        close: [Function],
        parseError: [Function],
        open: [Function],
        fullsetup: [Function],
        all: [Function],
        reconnect: [Function] },
     _eventsCount: 25,
     _maxListeners: Infinity,
     clientInfo:
      { driver: [Object],
        os: [Object],
        platform: 'Node.js v10.13.0, LE' },
     s:
      { coreTopology: [Server],
        sCapabilities: null,
        clonedOptions: [Object],
        reconnect: true,
        emitError: true,
        poolSize: 5,
        storeOptions: [Object],
        store: [Store],
        host: '127.0.0.1',
        port: 27017,
        options: [Object],
        sessionPool: [ServerSessionPool],
        sessions: [],
        promiseLibrary: [Function: Promise] } } }
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG connect database ready MongoClient {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s:
   { url:
      'mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb',
     options:
      { servers: [Array],
        compressors: 'disabled',
        gssapiservicename: 'mongodb',
        useNewUrlParser: true,
        connectTimeoutMS: 2000,
        db: 'cm',
        dbName: 'cm',
        socketTimeoutMS: 360000,
        promiseLibrary: [Function: Promise] },
     promiseLibrary: [Function: Promise],
     dbCache: { cm: [Db] },
     sessions: [] },
  topology:
   Server {
     _events:
      { serverOpening: [Function],
        serverDescriptionChanged: [Function],
        serverHeartbeatStarted: [Function],
        serverHeartbeatSucceeded: [Function],
        serverHeartbeatFailed: [Function],
        serverClosed: [Function],
        topologyOpening: [Function],
        topologyClosed: [Function],
        topologyDescriptionChanged: [Function],
        commandStarted: [Function],
        commandSucceeded: [Function],
        commandFailed: [Function],
        joined: [Function],
        left: [Function],
        ping: [Function],
        ha: [Function],
        authenticated: [Function],
        error: [Array],
        timeout: [Array],
        close: [Array],
        parseError: [Array],
        open: [Array],
        fullsetup: [Array],
        all: [Array],
        reconnect: [Array] },
     _eventsCount: 25,
     _maxListeners: Infinity,
     clientInfo:
      { driver: [Object],
        os: [Object],
        platform: 'Node.js v10.13.0, LE' },
     s:
      { coreTopology: [Server],
        sCapabilities: null,
        clonedOptions: [Object],
        reconnect: true,
        emitError: true,
        poolSize: 5,
        storeOptions: [Object],
        store: [Store],
        host: '127.0.0.1',
        port: 27017,
        options: [Object],
        sessionPool: [ServerSessionPool],
        sessions: [],
        promiseLibrary: [Function: Promise] } } }
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG sumPoints start
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG sumPoints collection open 1585440000000 1586044799999
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG connect database return mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb MongoClient {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s:
   { url:
      'mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb',
     options:
      { servers: [Array],
        compressors: 'disabled',
        gssapiservicename: 'mongodb',
        useNewUrlParser: true,
        connectTimeoutMS: 2000,
        db: 'cm',
        dbName: 'cm',
        socketTimeoutMS: 360000,
        promiseLibrary: [Function: Promise] },
     promiseLibrary: [Function: Promise],
     dbCache: {},
     sessions: [] },
  topology:
   Server {
     _events:
      { serverOpening: [Function],
        serverDescriptionChanged: [Function],
        serverHeartbeatStarted: [Function],
        serverHeartbeatSucceeded: [Function],
        serverHeartbeatFailed: [Function],
        serverClosed: [Function],
        topologyOpening: [Function],
        topologyClosed: [Function],
        topologyDescriptionChanged: [Function],
        commandStarted: [Function],
        commandSucceeded: [Function],
        commandFailed: [Function],
        joined: [Function],
        left: [Function],
        ping: [Function],
        ha: [Function],
        authenticated: [Function],
        error: [Function],
        timeout: [Function],
        close: [Function],
        parseError: [Function],
        open: [Function],
        fullsetup: [Function],
        all: [Function],
        reconnect: [Function] },
     _eventsCount: 25,
     _maxListeners: Infinity,
     clientInfo:
      { driver: [Object],
        os: [Object],
        platform: 'Node.js v10.13.0, LE' },
     s:
      { coreTopology: [Server],
        sCapabilities: null,
        clonedOptions: [Object],
        reconnect: true,
        emitError: true,
        poolSize: 5,
        storeOptions: [Object],
        store: [Store],
        host: '127.0.0.1',
        port: 27017,
        options: [Object],
        sessionPool: [ServerSessionPool],
        sessions: [],
        promiseLibrary: [Function: Promise] } } }
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG connect database ready MongoClient {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s:
   { url:
      'mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb',
     options:
      { servers: [Array],
        compressors: 'disabled',
        gssapiservicename: 'mongodb',
        useNewUrlParser: true,
        connectTimeoutMS: 2000,
        db: 'cm',
        dbName: 'cm',
        socketTimeoutMS: 360000,
        promiseLibrary: [Function: Promise] },
     promiseLibrary: [Function: Promise],
     dbCache: { cm: [Db] },
     sessions: [] },
  topology:
   Server {
     _events:
      { serverOpening: [Function],
        serverDescriptionChanged: [Function],
        serverHeartbeatStarted: [Function],
        serverHeartbeatSucceeded: [Function],
        serverHeartbeatFailed: [Function],
        serverClosed: [Function],
        topologyOpening: [Function],
        topologyClosed: [Function],
        topologyDescriptionChanged: [Function],
        commandStarted: [Function],
        commandSucceeded: [Function],
        commandFailed: [Function],
        joined: [Function],
        left: [Function],
        ping: [Function],
        ha: [Function],
        authenticated: [Function],
        error: [Array],
        timeout: [Array],
        close: [Array],
        parseError: [Array],
        open: [Array],
        fullsetup: [Array],
        all: [Array],
        reconnect: [Array] },
     _eventsCount: 25,
     _maxListeners: Infinity,
     clientInfo:
      { driver: [Object],
        os: [Object],
        platform: 'Node.js v10.13.0, LE' },
     s:
      { coreTopology: [Server],
        sCapabilities: null,
        clonedOptions: [Object],
        reconnect: true,
        emitError: true,
        poolSize: 5,
        storeOptions: [Object],
        store: [Store],
        host: '127.0.0.1',
        port: 27017,
        options: [Object],
        sessionPool: [ServerSessionPool],
        sessions: [],
        promiseLibrary: [Function: Promise] } } }
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG sumPoints start
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG sumPoints collection open 1584835200000 1585439999999
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG connect start
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG connect database return mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb MongoClient {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s:
   { url:
      'mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb',
     options:
      { servers: [Array],
        compressors: 'disabled',
        gssapiservicename: 'mongodb',
        useNewUrlParser: true,
        connectTimeoutMS: 2000,
        db: 'cm',
        dbName: 'cm',
        socketTimeoutMS: 360000,
        promiseLibrary: [Function: Promise] },
     promiseLibrary: [Function: Promise],
     dbCache: {},
     sessions: [] },
  topology:
   Server {
     _events:
      { serverOpening: [Function],
        serverDescriptionChanged: [Function],
        serverHeartbeatStarted: [Function],
        serverHeartbeatSucceeded: [Function],
        serverHeartbeatFailed: [Function],
        serverClosed: [Function],
        topologyOpening: [Function],
        topologyClosed: [Function],
        topologyDescriptionChanged: [Function],
        commandStarted: [Function],
        commandSucceeded: [Function],
        commandFailed: [Function],
        joined: [Function],
        left: [Function],
        ping: [Function],
        ha: [Function],
        authenticated: [Function],
        error: [Function],
        timeout: [Function],
        close: [Function],
        parseError: [Function],
        open: [Function],
        fullsetup: [Function],
        all: [Function],
        reconnect: [Function] },
     _eventsCount: 25,
     _maxListeners: Infinity,
     clientInfo:
      { driver: [Object],
        os: [Object],
        platform: 'Node.js v10.13.0, LE' },
     s:
      { coreTopology: [Server],
        sCapabilities: null,
        clonedOptions: [Object],
        reconnect: true,
        emitError: true,
        poolSize: 5,
        storeOptions: [Object],
        store: [Store],
        host: '127.0.0.1',
        port: 27017,
        options: [Object],
        sessionPool: [ServerSessionPool],
        sessions: [],
        promiseLibrary: [Function: Promise] } } }
[Thu Apr 02 2020 18:58:17 GMT-0300 (GMT-03:00)] DEBUG connect database ready MongoClient {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s:
   { url:
      'mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb',
     options:
      { servers: [Array],
        compressors: 'disabled',
        gssapiservicename: 'mongodb',
        useNewUrlParser: true,
        connectTimeoutMS: 2000,
        db: 'cm',
        dbName: 'cm',
        socketTimeoutMS: 360000,
        promiseLibrary: [Function: Promise] },
     promiseLibrary: [Function: Promise],
     dbCache: { cm: [Db] },
     sessions: [] },
  topology:
   Server {
     _events:
      { serverOpening: [Function],
        serverDescriptionChanged: [Function],
        serverHeartbeatStarted: [Function],
        serverHeartbeatSucceeded: [Function],
        serverHeartbeatFailed: [Function],
        serverClosed: [Function],
        topologyOpening: [Function],
        topologyClosed: [Function],
        topologyDescriptionChanged: [Function],
        commandStarted: [Function],
        commandSucceeded: [Function],
        commandFailed: [Function],
        joined: [Function],
        left: [Function],
        ping: [Function],
        ha: [Function],
        authenticated: [Function],
        error: [Array],
        timeout: [Array],
        close: [Array],
        parseError: [Array],
        open: [Array],
        fullsetup: [Array],
        all: [Array],
        reconnect: [Array] },
     _eventsCount: 25,
     _maxListeners: Infinity,
     clientInfo:
      { driver: [Object],
        os: [Object],
        platform: 'Node.js v10.13.0, LE' },
     s:
      { coreTopology: [Server],
        sCapabilities: null,
        clonedOptions: [Object],
        reconnect: true,
        emitError: true,
        poolSize: 5,
        storeOptions: [Object],
        store: [Store],
        host: '127.0.0.1',
        port: 27017,
        options: [Object],
        sessionPool: [ServerSessionPool],
        sessions: [],
        promiseLibrary: [Function: Promise] } } }
[Thu Apr 02 2020 18:58:22 GMT-0300 (GMT-03:00)] DEBUG connect start
[Thu Apr 02 2020 18:58:22 GMT-0300 (GMT-03:00)] DEBUG connect database return mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb MongoClient {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s:
   { url:
      'mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb',
     options:
      { servers: [Array],
        compressors: 'disabled',
        gssapiservicename: 'mongodb',
        useNewUrlParser: true,
        connectTimeoutMS: 2000,
        db: 'cm',
        dbName: 'cm',
        socketTimeoutMS: 360000,
        promiseLibrary: [Function: Promise] },
     promiseLibrary: [Function: Promise],
     dbCache: {},
     sessions: [] },
  topology:
   Server {
     _events:
      { serverOpening: [Function],
        serverDescriptionChanged: [Function],
        serverHeartbeatStarted: [Function],
        serverHeartbeatSucceeded: [Function],
        serverHeartbeatFailed: [Function],
        serverClosed: [Function],
        topologyOpening: [Function],
        topologyClosed: [Function],
        topologyDescriptionChanged: [Function],
        commandStarted: [Function],
        commandSucceeded: [Function],
        commandFailed: [Function],
        joined: [Function],
        left: [Function],
        ping: [Function],
        ha: [Function],
        authenticated: [Function],
        error: [Function],
        timeout: [Function],
        close: [Function],
        parseError: [Function],
        open: [Function],
        fullsetup: [Function],
        all: [Function],
        reconnect: [Function] },
     _eventsCount: 25,
     _maxListeners: Infinity,
     clientInfo:
      { driver: [Object],
        os: [Object],
        platform: 'Node.js v10.13.0, LE' },
     s:
      { coreTopology: [Server],
        sCapabilities: null,
        clonedOptions: [Object],
        reconnect: true,
        emitError: true,
        poolSize: 5,
        storeOptions: [Object],
        store: [Store],
        host: '127.0.0.1',
        port: 27017,
        options: [Object],
        sessionPool: [ServerSessionPool],
        sessions: [],
        promiseLibrary: [Function: Promise] } } }
[Thu Apr 02 2020 18:58:22 GMT-0300 (GMT-03:00)] DEBUG connect database ready MongoClient {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s:
   { url:
      'mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb',
     options:
      { servers: [Array],
        compressors: 'disabled',
        gssapiservicename: 'mongodb',
        useNewUrlParser: true,
        connectTimeoutMS: 2000,
        db: 'cm',
        dbName: 'cm',
        socketTimeoutMS: 360000,
        promiseLibrary: [Function: Promise] },
     promiseLibrary: [Function: Promise],
     dbCache: { cm: [Db] },
     sessions: [] },
  topology:
   Server {
     _events:
      { serverOpening: [Function],
        serverDescriptionChanged: [Function],
        serverHeartbeatStarted: [Function],
        serverHeartbeatSucceeded: [Function],
        serverHeartbeatFailed: [Function],
        serverClosed: [Function],
        topologyOpening: [Function],
        topologyClosed: [Function],
        topologyDescriptionChanged: [Function],
        commandStarted: [Function],
        commandSucceeded: [Function],
        commandFailed: [Function],
        joined: [Function],
        left: [Function],
        ping: [Function],
        ha: [Function],
        authenticated: [Function],
        error: [Array],
        timeout: [Array],
        close: [Array],
        parseError: [Array],
        open: [Array],
        fullsetup: [Array],
        all: [Array],
        reconnect: [Array] },
     _eventsCount: 25,
     _maxListeners: Infinity,
     clientInfo:
      { driver: [Object],
        os: [Object],
        platform: 'Node.js v10.13.0, LE' },
     s:
      { coreTopology: [Server],
        sCapabilities: null,
        clonedOptions: [Object],
        reconnect: true,
        emitError: true,
        poolSize: 5,
        storeOptions: [Object],
        store: [Store],
        host: '127.0.0.1',
        port: 27017,
        options: [Object],
        sessionPool: [ServerSessionPool],
        sessions: [],
        promiseLibrary: [Function: Promise] } } }
[Thu Apr 02 2020 18:58:38 GMT-0300 (GMT-03:00)] DEBUG connect start
[Thu Apr 02 2020 18:58:38 GMT-0300 (GMT-03:00)] DEBUG connect database return mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb MongoClient {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s:
   { url:
      'mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb',
     options:
      { servers: [Array],
        compressors: 'disabled',
        gssapiservicename: 'mongodb',
        useNewUrlParser: true,
        connectTimeoutMS: 2000,
        db: 'cm',
        dbName: 'cm',
        socketTimeoutMS: 360000,
        promiseLibrary: [Function: Promise] },
     promiseLibrary: [Function: Promise],
     dbCache: {},
     sessions: [] },
  topology:
   Server {
     _events:
      { serverOpening: [Function],
        serverDescriptionChanged: [Function],
        serverHeartbeatStarted: [Function],
        serverHeartbeatSucceeded: [Function],
        serverHeartbeatFailed: [Function],
        serverClosed: [Function],
        topologyOpening: [Function],
        topologyClosed: [Function],
        topologyDescriptionChanged: [Function],
        commandStarted: [Function],
        commandSucceeded: [Function],
        commandFailed: [Function],
        joined: [Function],
        left: [Function],
        ping: [Function],
        ha: [Function],
        authenticated: [Function],
        error: [Function],
        timeout: [Function],
        close: [Function],
        parseError: [Function],
        open: [Function],
        fullsetup: [Function],
        all: [Function],
        reconnect: [Function] },
     _eventsCount: 25,
     _maxListeners: Infinity,
     clientInfo:
      { driver: [Object],
        os: [Object],
        platform: 'Node.js v10.13.0, LE' },
     s:
      { coreTopology: [Server],
        sCapabilities: null,
        clonedOptions: [Object],
        reconnect: true,
        emitError: true,
        poolSize: 5,
        storeOptions: [Object],
        store: [Store],
        host: '127.0.0.1',
        port: 27017,
        options: [Object],
        sessionPool: [ServerSessionPool],
        sessions: [],
        promiseLibrary: [Function: Promise] } } }
[Thu Apr 02 2020 18:58:38 GMT-0300 (GMT-03:00)] DEBUG connect database ready MongoClient {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s:
   { url:
      'mongodb://127.0.0.1:27017/cm?compressors=disabled&gssapiServiceName=mongodb',
     options:
      { servers: [Array],
        compressors: 'disabled',
        gssapiservicename: 'mongodb',
        useNewUrlParser: true,
        connectTimeoutMS: 2000,
        db: 'cm',
        dbName: 'cm',
        socketTimeoutMS: 360000,
        promiseLibrary: [Function: Promise] },
     promiseLibrary: [Function: Promise],
     dbCache: { cm: [Db] },
     sessions: [] },
  topology:
   Server {
     _events:
      { serverOpening: [Function],
        serverDescriptionChanged: [Function],
        serverHeartbeatStarted: [Function],
        serverHeartbeatSucceeded: [Function],
        serverHeartbeatFailed: [Function],
        serverClosed: [Function],
        topologyOpening: [Function],
        topologyClosed: [Function],
        topologyDescriptionChanged: [Function],
        commandStarted: [Function],
        commandSucceeded: [Function],
        commandFailed: [Function],
        joined: [Function],
        left: [Function],
        ping: [Function],
        ha: [Function],
        authenticated: [Function],
        error: [Array],
        timeout: [Array],
        close: [Array],
        parseError: [Array],
        open: [Array],
        fullsetup: [Array],
        all: [Array],
        reconnect: [Array] },
     _eventsCount: 25,
     _maxListeners: Infinity,
     clientInfo:
      { driver: [Object],
        os: [Object],
        platform: 'Node.js v10.13.0, LE' },
     s:
      { coreTopology: [Server],
        sCapabilities: null,
        clonedOptions: [Object],
        reconnect: true,
        emitError: true,
        poolSize: 5,
        storeOptions: [Object],
        store: [Store],
        host: '127.0.0.1',
        port: 27017,
        options: [Object],
        sessionPool: [ServerSessionPool],
        sessions: [],
        promiseLibrary: [Function: Promise] } } }
